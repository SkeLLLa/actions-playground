name: Verify

on:
  push:
    tags-ignore:
      - v[0-9]+.[0-9]+.[0-9]+
      - v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+
    branches:
      - master
      - next

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build --if-present
      - name: Audit
        run: npm audit --production
      - name: Lint
        run: npm run lint --if-present
      - name: Test
        run: npm run unit --if-present -- --coverage
      - name: Archive code coverage results
        if: matrix.node-version == '14.x'
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: coverage
  bump-version:
    name: Bump version
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: debug
        run: echo ${{ github.ref }}
      - name: Install dependencies
        run: npm ci
      - name: Update version file
        run: npm run version:update
      - name: Commit version changes
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          git config --global user.name 'Release Bot'
          git config --global user.email '2273103+SkeLLLa@users.noreply.github.com'
          npm run release
      - name: Commit version changes
        if: ${{ github.ref == 'refs/heads/next' }}
        run: |
          git config --global user.name 'Release Bot'
          git config --global user.email '2273103+SkeLLLa@users.noreply.github.com'
          npm run release -- --prerelease rc --skip.changelog
        # run: |
        #   git config --global user.name 'Release Bot'
        #   git config --global user.email '2273103+SkeLLLa@users.noreply.github.com'
        #   RELEASE_VERSION=`cat VERSION`
        #   echo "$RELEASE_VERSION"
        #   [[ ${{ github.ref }} == "refs/heads/master" ]] && npm run release || npm run release -- --prerelease rc --skip changelog
  # release:
  #   name: Create release
  #   needs: bump-version
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 50
  #     - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
  #     - run: git fetch --prune --unshallow
  #     - name: Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 14
  #     - name: Install dependencies
  #       run: npm ci
  #     - run: npm run get-changelog | tail -n +2
  #     - name: Get latest changelog
  #       id: Changelog
  #       run: |
  #         changelog=$(npm run --silent get-changelog | tail -n +2)
  #         echo $changelog
  #         changelog="${changelog//'%'/'%25'}"
  #         changelog="${changelog//$'\n'/'%0A'}"
  #         changelog="${changelog//$'\r'/'%0D'}"
  #         echo "::set-output name=changelog::$changelog"
  #     # - name: Get version
  #     #   id: release_version
  #     #   run: |
  #     #     RELEASE_VERSION = `cat VERSION`
  #     #     echo "::set-output name=version::$RELEASE_VERSION"
  #     - name: Get release type
  #       id: release_type
  #       run: |
  #         RELEASE_VERSION=`cat VERSION`
  #         PRERELEASE=$([[ $RELEASE_VERSION == *"-rc"* ]] && echo true || echo false)
  #         echo "::set-output name=version::$RELEASE_VERSION"
  #         echo "::set-output name=prerelease::$PRERELEASE"
  #     - name: Create github release
  #       id: create_release
  #       uses: actions/create-release@latest
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ steps.release_type.outputs.version }}
  #         release_name: Release ${{ steps.release_type.outputs.version }}
  #         body: |
  #           ${{ steps.Changelog.outputs.changelog }}
  #         draft: false
  #         prerelease: ${{ steps.release_type.outputs.prerelease }}
